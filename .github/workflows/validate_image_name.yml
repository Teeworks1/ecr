name: ECR Image Tag Validation
on:
  pull_request:
    paths:
      - '**'
  push:
    paths:
      - '**'
jobs:
  validate_image_tags:
    name: Validate Image Tags
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Pull Request
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Identify Values Files
        id: identify-values-files
        run: |
          #!/bin/bash
          # Search for values*.yaml files in the current directory and all subdirectories
          echo "Searching for values*.yaml files..."
          values_files=$(find . -type f -name "values*.yaml")
          # Check if any values*.yaml files were found
          if [ -n "$values_files" ]; then
              echo "Values*.yaml files found:"
              echo "$values_files"
          else
              echo "No values*.yaml files found."
              exit 1
          fi
          # Extract image and latestTag fields from values*.yaml files
          for file in $values_files; do
              echo "Processing $file..."
              while IFS= read -r line; do
                  # Check if overrides exist
                  if [[ $line =~ overrides:\ (.+) ]]; then
                      overrides="${BASH_REMATCH[1]}"
                      echo "Overrides: $overrides"
                      continue
                  fi
                  # Extract image value
                  if [[ $line =~ image:\ (.+) ]]; then
                      image="${BASH_REMATCH[1]}"
                      echo "Image: $image"
                  fi
                  # Extract latestTag value
                  if [[ $line =~ latestTag:\ (.+) ]]; then
                      latestTag="${BASH_REMATCH[1]}"
                      echo "Latest Tag: $latestTag"
                  fi
              done < "$file"
          done
      
            - name: List ECR Repositories
        id: list-ecr-repos
        run: |
          echo "Listing ECR repositories..." 
          aws ecr describe-repositories --query 'repositories[*].[repositoryName, repositoryUri]' --output json > ecr_repositories.json

      - name: Save ECR Repositories to Environment File
        run: echo "ECR_REPOSITORIES=$(cat ecr_repositories.json | base64 -w0)" >> $GITHUB_ENV
     
      - name: Check Overrides and Validate Image Tags in ECR
        if: ${{ steps.identify-values-files.outputs.values_files != '' }}
        run: |
          # Retrieve values from previous step outputs
          overrides=${{ steps.identify-values-files.outputs.overrides }}
          image=${{ steps.identify-values-files.outputs.image }}
          latestTag=${{ steps.identify-values-files.outputs.latestTag }}

          # Retrieve ECR repositories list from environment variable
          ecr_repositories=$(echo "$ECR_REPOSITORIES" | base64 -d)

          # Check if override tag exists in ECR repositories
          if [[ -n "$overrides" ]]; then
              echo "Checking overrides against ECR repositories..."
              if echo "$ecr_repositories" | grep -q "$overrides"; then
                  echo "Override tag '$overrides' found in ECR. Validation successful."
              else
                  echo "Error: Override tag '$overrides' not found in ECR repository. Validation failed."
                  exit 1
              fi
          fi

          # Check if image and latest tag combination exists in ECR repositories
          if [[ -n "$image" && -n "$latestTag" ]]; then
              echo "Checking image and latest tag against ECR repositories..."
              if echo "$ecr_repositories" | grep -q "$image" && echo "$ecr_repositories" | grep -q "$latestTag"; then
                  echo "Image '$image' with latest tag '$latestTag' found in ECR. Validation successful."
              else
                  echo "Error: Image '$image' with latest tag '$latestTag' not found in ECR repository. Validation failed."
                  exit 1
              fi
          fi

      - name: Set Workflow Status
        if: ${{ steps.identify-values-files.outputs.values_files != '' }}
        run: exit 0
