---
name: ECR Image Tag Validation

on:
  pull_request:
    paths:
      - '**'
  push:
    paths:
      - '**'

jobs:

  validate_image_tags:
    name: Validate Image Tags
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Pull Request
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Identify Modified Values Files
        id: identify-modified-values-files
        run: |
          #!/bin/bash

          # Check if any values*.yaml files were modified
          modified_values_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep 'values.*\.yaml' || true)

          # Check if any values*.yaml files were modified
          if [ -n "$modified_values_files" ]; then
              echo "Modified values*.yaml files found:"
              echo "$modified_values_files"
              echo "::set-output name=modified_values_files::$modified_values_files"
          else
              echo "No modified values*.yaml files found."
              exit 1
          fi

      - name: Extract Image and LatestTag from Modified Values Files
        id: extract-image-latestTag
        if: steps.identify-modified-values-files.outputs.modified_values_files != ''
        run: |
          # Extract image and latestTag fields from modified values*.yaml files
          modified_files="${{ steps.identify-modified-values-files.outputs.modified_values_files }}"
          for file in $modified_files; do
              echo "Processing $file..."
              while IFS= read -r line; do
                  # Extract image value
                  if [[ $line =~ image:\ (.+) ]]; then
                      image="${BASH_REMATCH[1]}"
                      echo "Image: $image"
                  fi
                  # Extract latestTag value
                  if [[ $line =~ latestTag:\ (.+) ]]; then
                      latestTag="${BASH_REMATCH[1]}"
                      echo "Latest Tag: $latestTag"
                  fi
              done < "$file"
          done

      - name: Set Workflow Status
        if: failure()
        run: exit 1

      - name: Set Workflow Status
        if: success()
        run: exit 0
