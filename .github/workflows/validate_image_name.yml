---
name: ECR Image Tag Validation

on:
  pull_request:
    paths:
      - '**'

jobs:

  validate_image_tags:
    name: Validate Image Tags
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Pull Request
        uses: actions/checkout@v2
        with:
          ref: ${{ github.event.pull_request.head.sha }}
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v2

      - name: Identify Values Files
        id: identify-values-files
        run: |
          values_files=$(git diff --name-only ${{ github.event.before }} ${{ github.event.after }} | grep 'values.yaml' || true)
          echo "::set-output name=values_files::$values_files"

      - name: Extract Image Tags from Values Files
        id: extract-tags
        run: |
          tags=""
          for file in ${{ steps.identify-values-files.outputs.values_files }}; do
            while IFS= read -r line; do
              if [[ $line =~ image:\ \"(.+)\" ]]; then
                image_url="${BASH_REMATCH[1]}"
                region=$(echo "$image_url" | cut -d'.' -f4)
                account_id=$(echo "$image_url" | cut -d'.' -f1)
                repository=$(echo "$image_url" | cut -d'/' -f2 | cut -d'/' -f2)
                registry_id=$(echo "$image_url" | cut -d'/' -f1 | cut -d'.' -f1)
                tags="$tags $region/$account_id/$registry_id/$repository"
              fi
            done < "$file"
          done
          echo "::set-output name=tags::$tags"

      - name: Validate Images in ECR
        id: validate-images
        run: |
          for tag in "${{ steps.extract-tags.outputs.tags }}"; do
            aws ecr describe-images --repository-name $(echo $tag | cut -d'/' -f4) --image-ids imageTag=$(echo $tag | cut -d'/' -f5) --region $(echo $tag | cut -d'/' -f1)
            if [ $? -ne 0 ]; then
              echo "Error: Image with tag '$tag' not found in ECR repository."
              exit 1
            fi
          done

      - name: Set Workflow Status
        if: failure()
        run: exit 1

      - name: Set Workflow Status
        if: success()
        run: exit 0
